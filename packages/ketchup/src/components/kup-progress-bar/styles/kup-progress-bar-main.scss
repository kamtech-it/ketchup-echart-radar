/**
* @prop --kup-progressbar-border-radius: Sets border radius of the component.
* @prop --kup-progressbar-font-family: Sets font family of the component.
* @prop --kup-progressbar-font-size: Sets font size of the component.
* @prop --kup-progressbar-height: Sets height of the component.
* @prop --kup-progressbar-primary-color: Sets primary color of the component.
* @prop --kup-progressbar-text-color: Sets text color of the component.
* @prop --kup-progressbar-text-color-rgb: Sets text color RGB values of the component (used for shaders).
* @prop --kup-progressbar-text-on-primary-color: Sets text on primary color of the component.
* @prop --kup-progressbar-track-color: Sets track color of the progress bar (empty section).
* @prop --kup-progressbar-width: Sets width of the component.
*/

:host {
  --kup_progressbar_border_radius: var(--kup-progressbar-border-radius, 4px);
  --kup_progressbar_font_family: var(
    --kup-progressbar-font-family,
    var(--kup-font-family)
  );
  --kup_progressbar_font_size: var(
    --kup-progressbar-font-size,
    var(--kup-font-size)
  );
  --kup_progressbar_height: var(--kup-progressbar-height, 1.25em);
  --kup_progressbar_primary_color: var(
    --kup-progressbar-primary-color,
    var(--kup-primary-color)
  );
  --kup_progressbar_text_color: var(
    --kup-progressbar-text-color,
    var(--kup-text-color)
  );
  --kup_progressbar_text_color_rgb: var(
    --kup-progressbar-text-color-rgb,
    var(--kup-text-color-rgb)
  );
  --kup_progressbar_text_on_primary_color: var(
    --kup-progressbar-text-on-primary-color,
    var(--kup-text-on-primary-color)
  );
  --kup_progressbar_track_color: var(
    --kup-progressbar-track-color,
    var(--kup-disabled-background-color)
  );
  --kup_progressbar_width: var(--kup-progressbar-width, 100%);

  display: block;
  font-family: var(--kup_progressbar_font_family);
  font-size: var(--kup_progressbar_font_size);
  width: var(--kup_progressbar_width);
}

.progress-bar {
  background: var(--kup_progressbar_track_color);
  border-radius: var(--kup_progressbar_border_radius);
  overflow: hidden;
  position: relative;
  width: var(--kup_progressbar_width);

  &.text-color-on-primary {
    & .progress-bar-percentage {
      color: var(--kup_progressbar_text_on_primary_color);
      & span {
        color: var(--kup_progressbar_text_on_primary_color);
      }
    }
  }
}

.progress-bar-percentage {
  background: var(--kup_progressbar_primary_color);
  border-radius: var(--kup_progressbar_border_radius);
  color: var(--kup_progressbar_text_color);
  height: var(--kup_progressbar_height);
  padding: 0.5em 0;
  text-align: center;
  transition: width 0.2s ease;

  & span {
    color: var(--kup_progressbar_text_color);
    display: inline-block;
    font-size: 1em;
    left: 0;
    line-height: var(--kup_progressbar_height);
    position: absolute;
    width: var(--kup_progressbar_width);
  }

  & .#{$kup-icon} {
    display: block;
    height: var(--kup_progressbar_height);
    &:not(.is-image) {
      background-color: var(--kup_progressbar_text_on_primary_color);
    }
    img {
      width: auto;
      height: 100%;
    }
  }
}

:host([is-radial]) {
  box-sizing: border-box;
  margin: auto;
  padding: 1.25em 0px;
  
  #kup-component {
    display: flex;
    font-size: 10em;
    margin: auto;
  }

  & .pie-wrapper {
    height: 1em;
    width: 1em;
    float: left;
    margin: auto;
    position: relative;

    &:nth-child(3n + 1) {
      clear: both;
    }

    & .pie {
      height: 1em;
      width: 1em;
      clip: rect(0, 1em, 1em, 0.5em);
      left: 0;
      position: absolute;
      top: 0;

      &.has-value {
        & .half-circle {
          border-color: var(--kup_progressbar_primary_color);
          &.left-side {
            transition: transform 0.2s ease;
          }
        }

        &.is-less-than-half {
          & .right-side {
            display: none;
          }
        }

        &.is-more-than-half {
          clip: rect(auto, auto, auto, auto);

          & .right-side {
            transform: rotate(180deg);
          }
        }
      }

      & .half-circle {
        height: 1em;
        width: 1em;
        border: 0.1em solid var(--kup_progressbar_track_color);
        border-radius: 50%;
        clip: rect(0, 0.5em, 1em, 0);
        left: 0;
        position: absolute;
        top: 0;
      }
    }

    & .label {
      background: none;
      bottom: 0.4em;
      color: var(--kup_progressbar_text_color);
      cursor: default;
      display: block;
      font-size: 0.25em;
      left: 0.4em;
      line-height: 2.75em;
      position: absolute;
      right: 0.4em;
      text-align: center;
      top: 0.4em;

      &.#{$kup-icon} {
        display: block;
        height: 1.25em;
        width: 1.25em;
        object-fit: cover;
        margin: auto;
        &:not(.is-image) {
          background-color: var(--kup_progressbar_primary_color);
        }
        img {
          width: auto;
          height: 100%;
        }
      }

      & .smaller {
        color: var(--kup_progressbar_text_color);
        opacity: 0.8;
        font-size: 0.45em;
        padding-bottom: 20px;
        vertical-align: super;
      }
    }

    & .shadow {
      height: 1em;
      width: 1em;
      border: 0.1em solid var(--kup_progressbar_track_color);
      border-radius: 50%;
    }
  }

  *,
  *:before,
  *:after {
    box-sizing: border-box;
  }
}

@keyframes running-stripes {
  0% {
    background-position: 0 0;
  }
  100% {
    background-position: 3em 3em;
  }
}
